---
- name: "Install webservers"
  hosts: webservers
  become: true
  tasks:
    - name: "Install nginx"
      ansible.builtin.apt:
        name: nginx
        state: latest
      become: true
    - name: "Add custom header"
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/default
        insertafter: ^\s+listen\s\[::\]:80\sdefault_server;
        line: "       add_header X-Webserver {{ ansible_hostname }};" 
    - name: "Restart nginx daemon"
      ansible.builtin.systemd:
        name: nginx
        state: restarted
        enabled: true

- name: "Install HA"
  hosts: ha-proxies
  become: true
  tasks:
    - name: "Install HAPROXY"
      ansible.builtin.apt:
        name: haproxy
        state: latest
      become: true

    - name: "Get facts webservers group"
      ansible.builtin.setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{groups['webservers']}}"
      register: webservers_facts
    
    - name: "Add HAPROXY configuration"
      ansible.builtin.blockinfile:
        path: /etc/haproxy/haproxy.cfg
        block: |
          frontend LAB_FRONTEND
            bind *:80
            mode http

          {% for server in webservers_facts.results %}
            acl APP_LAB{{loop.index}} hdr_dom(host) -i website{{loop.index}}.local
            use_backend LAB_BACKEND{{loop.index}} if APP_LAB{{loop.index}}
          {% endfor %}

          {% for server in webservers_facts.results %}
          backend LAB_BACKEND{{loop.index}}
            server {{server['ansible_facts']['ansible_hostname']}} {{server['ansible_facts']['ansible_eth1']['ipv4']['address']}}:80 
          {% endfor %}

    - name: "Restart HAPROXY"
      ansible.builtin.systemd:
        name: haproxy
        state: restarted
        enabled: true
            