---
- name: "Install webservers"
  hosts: webservers
  become: true
  tasks:
    - name: "Install nginx"
      ansible.builtin.apt:
        name: nginx
        state: latest
      become: true
    - name: "Add custom header"
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/default
        insertafter: ^\s+listen\s\[::\]:80\sdefault_server;
        line: "       add_header X-Webserver {{ ansible_hostname }};"
    - name: "Restart nginx daemon"
      ansible.builtin.systemd:
        name: nginx
        state: restarted
        enabled: true

- name: "Create HTML dummy page"
  hosts: web-1
  become: true
  tasks:
    - name: "Create Page1.html"
      ansible.builtin.file:
        path: /var/www/html/Page1.html
        state: touch
        owner: www-data
        group: www-data
        mode: 0755
      become: true
    - name: "Add Content to html"
      ansible.builtin.blockinfile:
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        path: /var/www/html/Page1.html
        block: |
          <h1>Page 1</h1>
        owner: www-data
        group: www-data
        mode: 0644
      become: true
    - name: "Create Dummy Folder"
      ansible.builtin.file:
        path: /var/www/html/dummy
        state: directory
        owner: www-data
        group: www-data
        mode: 0755
      become: true
    - name: "Create Dummy html"
      ansible.builtin.file:
        path: "/var/www/html/dummy/{{item}}"
        state: touch
        owner: www-data
        group: www-data
        mode: 0755
      become: true
      loop: 
        - "Dummy1.html"
        - "Dummy2.html"
        - "Dummy3.html"
    - name: "Add dummy content"
      ansible.builtin.blockinfile:
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        path: "/var/www/html/dummy/{{item}}"
        block: |
          <h1>{{ item }}</h1>
        owner: www-data
        group: www-data
        mode: 0644
      become: true
      loop: 
        - "Dummy1.html"
        - "Dummy2.html"
        - "Dummy3.html"
        

- name: "Install HA"
  hosts: ha-proxies
  become: true
  tasks:
    - name: "Install HAPROXY"
      ansible.builtin.apt:
        name:
          - haproxy
          - hatop
        state: latest
      become: true

    - name: "Get facts webservers group"
      ansible.builtin.setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{groups['webservers']}}"
      register: webservers_facts
    
    - name: "Add HAPROXY configuration"
      ansible.builtin.blockinfile:
        path: /etc/haproxy/haproxy.cfg
        block: |
          frontend LAB_FRONTEND
            description My Frontend
            bind *:80
            mode http

          acl is_match path -i /Page1.html
          use_backend LAB_BACKEND1 if is_match

          acl is_match path_beg -i /dummy
          use_backend LAB_BACKEND1 if is_match

          default_backend LAB_BACKEND2

          
          backend LAB_BACKEND1
          description Backend {{ webservers_facts.results[0]['ansible_facts']['ansible_hostname'] }}
          server {{webservers_facts.results[0]['ansible_facts']['ansible_hostname']}} {{webservers_facts.results[0]['ansible_facts']['ansible_eth1']['ipv4']['address']}}:80 

          backend LAB_BACKEND2
          description {% for server in webservers_facts.results %}{% if loop.first != True %}{{server['ansible_facts']['ansible_hostname']}}{% endif %} {% endfor %}


          {% for server in webservers_facts.results %}
            {% if loop.first != True %}
              server {{server['ansible_facts']['ansible_hostname']}} {{server['ansible_facts']['ansible_eth1']['ipv4']['address']}}:80 
            {% endif %}
          {% endfor %}

          listen stats
            bind *:9000
            stats enable
            stats uri /stats
            stats refresh 2s
            stats show-desc
            stats show-legends
            stats auth vincent:P@ssw0rd
            stats admin if TRUE
    - name: "Restart HAPROXY"
      ansible.builtin.systemd:
        name: haproxy
        state: restarted
        enabled: true
            
